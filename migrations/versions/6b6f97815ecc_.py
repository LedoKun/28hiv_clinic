"""empty message

Revision ID: 6b6f97815ecc
Revises: 
Create Date: 2019-05-20 08:44:29.801709

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6b6f97815ecc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('icd10',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('icd10', sa.Unicode(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patient',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('modified_on', sa.DateTime(), nullable=True),
    sa.Column('imported', sa.Boolean(), nullable=True),
    sa.Column('clinicID', sa.Unicode(), nullable=True),
    sa.Column('hn', sa.Unicode(), nullable=False),
    sa.Column('governmentID', sa.Unicode(), nullable=True),
    sa.Column('napID', sa.Unicode(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('dateOfBirth', sa.Date(), nullable=True),
    sa.Column('sex', sa.Unicode(), nullable=False),
    sa.Column('gender', sa.Unicode(), nullable=True),
    sa.Column('maritalStatus', sa.Unicode(), nullable=True),
    sa.Column('nationality', sa.Unicode(), nullable=True),
    sa.Column('healthInsurance', sa.Unicode(), nullable=False),
    sa.Column('phoneNumbers', postgresql.ARRAY(sa.Unicode()), nullable=True),
    sa.Column('relativePhoneNumbers', postgresql.ARRAY(sa.Unicode()), nullable=True),
    sa.Column('referralStatus', sa.Unicode(), nullable=True),
    sa.Column('referredFrom', sa.Unicode(), nullable=True),
    sa.Column('patientStatus', sa.Unicode(), nullable=True),
    sa.Column('referredOutTo', sa.Unicode(), nullable=True),
    sa.Column('riskBehaviors', postgresql.ARRAY(sa.Unicode()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('clinicID'),
    sa.UniqueConstraint('hn')
    )
    op.create_table('appointment',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('modified_on', sa.DateTime(), nullable=True),
    sa.Column('imported', sa.Boolean(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('appointmentFor', sa.Unicode(), nullable=False),
    sa.Column('patientID', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['patientID'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investigation',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('modified_on', sa.DateTime(), nullable=True),
    sa.Column('imported', sa.Boolean(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('viralLoad', sa.Float(), nullable=True),
    sa.Column('percentCD4', sa.Float(), nullable=True),
    sa.Column('absoluteCD4', sa.Float(), nullable=True),
    sa.Column('hemoglobin', sa.Float(), nullable=True),
    sa.Column('hematocrit', sa.Float(), nullable=True),
    sa.Column('whiteBloodCellCount', sa.Float(), nullable=True),
    sa.Column('neutrophilsPct', sa.Float(), nullable=True),
    sa.Column('eosinophilsPct', sa.Float(), nullable=True),
    sa.Column('basophilsPct', sa.Float(), nullable=True),
    sa.Column('lymphocytesPct', sa.Float(), nullable=True),
    sa.Column('monocytesPct', sa.Float(), nullable=True),
    sa.Column('fbs', sa.Float(), nullable=True),
    sa.Column('hemoglobinA1c', sa.Float(), nullable=True),
    sa.Column('cholesterol', sa.Float(), nullable=True),
    sa.Column('triglycerides', sa.Float(), nullable=True),
    sa.Column('creatinine', sa.Float(), nullable=True),
    sa.Column('eGFR', sa.Float(), nullable=True),
    sa.Column('ast', sa.Float(), nullable=True),
    sa.Column('alt', sa.Float(), nullable=True),
    sa.Column('alp', sa.Float(), nullable=True),
    sa.Column('sodium', sa.Float(), nullable=True),
    sa.Column('potassium', sa.Float(), nullable=True),
    sa.Column('chloride', sa.Float(), nullable=True),
    sa.Column('bicarbonate', sa.Float(), nullable=True),
    sa.Column('phosphate', sa.Float(), nullable=True),
    sa.Column('antiHIV', sa.Unicode(), nullable=True),
    sa.Column('HBsAg', sa.Unicode(), nullable=True),
    sa.Column('antiHBs', sa.Unicode(), nullable=True),
    sa.Column('antiHCV', sa.Unicode(), nullable=True),
    sa.Column('tpha', sa.Unicode(), nullable=True),
    sa.Column('rpr', sa.Integer(), nullable=True),
    sa.Column('cryptoAg', sa.Unicode(), nullable=True),
    sa.Column('afb', sa.Unicode(), nullable=True),
    sa.Column('geneXpert', sa.Unicode(), nullable=True),
    sa.Column('tbCulture', sa.Unicode(), nullable=True),
    sa.Column('dst', sa.Unicode(), nullable=True),
    sa.Column('lpa', sa.Unicode(), nullable=True),
    sa.Column('tst', sa.Float(), nullable=True),
    sa.Column('chestXRay', sa.Unicode(), nullable=True),
    sa.Column('patientID', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['patientID'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('partner',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('modified_on', sa.DateTime(), nullable=True),
    sa.Column('imported', sa.Boolean(), nullable=True),
    sa.Column('deceased', sa.Unicode(), nullable=True),
    sa.Column('gender', sa.Unicode(), nullable=True),
    sa.Column('HIVStatus', sa.Unicode(), nullable=True),
    sa.Column('PatientHIVStatusDisclosure', sa.Unicode(), nullable=True),
    sa.Column('HIVTreatmentOrPrevention', sa.Unicode(), nullable=True),
    sa.Column('clinicAttend', sa.Unicode(), nullable=True),
    sa.Column('hn', sa.Unicode(), nullable=True),
    sa.Column('patientID', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['patientID'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('visit',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('modified_on', sa.DateTime(), nullable=True),
    sa.Column('imported', sa.Boolean(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('bodyWeight', sa.Float(), nullable=True),
    sa.Column('historyOfContactWithTB', sa.Boolean(), nullable=True),
    sa.Column('ARTAdherenceScale', sa.Float(), nullable=True),
    sa.Column('ARTAvgDelayedDosing', sa.Float(), nullable=True),
    sa.Column('ARTAdherenceProblem', sa.Unicode(), nullable=True),
    sa.Column('impression', postgresql.ARRAY(sa.Unicode()), nullable=True),
    sa.Column('arvMedications', postgresql.ARRAY(sa.Unicode()), nullable=True),
    sa.Column('whySwitchingARV', sa.Unicode(), nullable=True),
    sa.Column('tbMedications', postgresql.ARRAY(sa.Unicode()), nullable=True),
    sa.Column('oiMedications', postgresql.ARRAY(sa.Unicode()), nullable=True),
    sa.Column('medications', postgresql.ARRAY(sa.Unicode()), nullable=True),
    sa.Column('patientID', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['patientID'], ['patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('visit')
    op.drop_table('partner')
    op.drop_table('investigation')
    op.drop_table('appointment')
    op.drop_table('patient')
    op.drop_table('icd10')
    # ### end Alembic commands ###
